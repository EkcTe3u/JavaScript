<testsuites id="" name="" tests="6" failures="2" skipped="0" errors="0" time="8.421844999998807">
<testsuite name="smoke-tests.spec.js" timestamp="1682967610440" hostname="" tests="5" failures="2" skipped="0" time="18.202" errors="0">
<testcase name="New Todo should allow me to add todo items" classname="smoke-tests.spec.js › New Todo › should allow me to add todo items" time="1.623">
</testcase>
<testcase name="New Todo should clear text input field when an item is added" classname="smoke-tests.spec.js › New Todo › should clear text input field when an item is added" time="1.425">
</testcase>
<testcase name="New Todo should append new items to the bottom of the list" classname="smoke-tests.spec.js › New Todo › should append new items to the bottom of the list" time="6.855">
<failure message="smoke-tests.spec.js:69:3 should append new items to the bottom of the list" type="FAILURE">
<![CDATA[  smoke-tests.spec.js:69:3 › New Todo › should append new items to the bottom of the list ==========

    Error: expect(received).toHaveText(expected)

    Expected pattern: /5/
    Received string:  "3 items left"
    Call log:
      - expect.toHaveText with timeout 5000ms
      - waiting for selector ".todo-count"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"
      -   selector resolved to <span class="todo-count" data-testid="todo-count">…</span>
      -   unexpected value "3 items left"


      79 |     await expect(page.locator('.todo-count')).toHaveText('3 items left');
      80 |     await expect(page.locator('.todo-count')).toContainText('3');
    > 81 |     await expect(page.locator('.todo-count')).toHaveText(/5/);
         |                                               ^
      82 |
      83 |     // Check all items in one call.
      84 |     testInfo.annotations.push({ type: 'testrail_result_comment', description: "3. Check all items at once" });

        at C:\Users\Andrey\Desktop\courses\GitHub\JavaScript\Auto\automation-frameworks-integration\samples\javascript\playwright\tests\smoke-tests.spec.js:81:47
]]>
</failure>
</testcase>
<testcase name="Mark all as completed should allow me to mark all items as completed" classname="smoke-tests.spec.js › Mark all as completed › should allow me to mark all items as completed" time="6.95">
<failure message="smoke-tests.spec.js:100:3 should allow me to mark all items as completed" type="FAILURE">
<![CDATA[  smoke-tests.spec.js:100:3 › Mark all as completed › should allow me to mark all items as completed 

    Error: expect(received).toHaveClass(expected) // deep equality

    - Expected  - 3
    + Received  + 3

      Array [
    -   "complete",
    -   "complete",
    -   "complete",
    +   "completed",
    +   "completed",
    +   "completed",
      ]
    Call log:
      - expect.toHaveClass with timeout 5000ms
      - waiting for selector ".todo-list li"
      -   selector resolved to 3 elements


      110 |     // Ensure all todos have 'completed' class.
      111 |     testInfo.annotations.push({ type: 'testrail_result_comment', description: "2. Verify all todos are complete" });
    > 112 |     await expect(page.locator('.todo-list li')).toHaveClass(['complete', 'complete', 'complete']);
          |                                                 ^
      113 |     await checkNumberOfCompletedTodosInLocalStorage(page, 3);
      114 |   });
      115 |

        at C:\Users\Andrey\Desktop\courses\GitHub\JavaScript\Auto\automation-frameworks-integration\samples\javascript\playwright\tests\smoke-tests.spec.js:112:49
]]>
</failure>
</testcase>
<testcase name="Mark all as completed should allow me to clear the complete state of all items" classname="smoke-tests.spec.js › Mark all as completed › should allow me to clear the complete state of all items" time="1.349">
</testcase>
</testsuite>
<testsuite name="todo-tests.spec.js" timestamp="1682967610440" hostname="" tests="1" failures="0" skipped="0" time="1.168" errors="0">
<testcase name="New Todo should allow me to add and check todo items" classname="todo-tests.spec.js › New Todo › should allow me to add and check todo items" time="1.168">
</testcase>
</testsuite>
</testsuites>